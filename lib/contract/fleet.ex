# Diode Server
# Copyright 2019 IoT Blockchain Technology Corporation LLC (IBTC)
# Licensed under the Diode License, Version 1.0
defmodule Contract.Fleet do
  @moduledoc """
    Wrapper for the FleetRegistry contract functions
    as needed by the tests
  """

  @spec set_device_whitelist(any, any, boolean) :: Chain.Transaction.t()
  def set_device_whitelist(fleet \\ Diode.fleet_address(), address, bool) when is_boolean(bool) do
    Shell.transaction(
      Diode.miner(),
      fleet,
      "SetDeviceWhitelist",
      ["address", "bool"],
      [address, bool]
    )
  end

  @spec device_whitelisted?(any, any) :: boolean
  def device_whitelisted?(fleet \\ Diode.fleet_address(), address) do
    ret = call(fleet, "deviceWhitelist", ["address"], [address], "latest")

    case :binary.decode_unsigned(ret) do
      1 -> true
      0 -> false
    end
  end

  defp call(fleet, name, types, values, blockRef) do
    {ret, _gas} = Shell.call(fleet, name, types, values, blockRef: blockRef)
    ret
  end

  def code() do
    "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806350f171161161005b57806350f1711614610117578063570ca73514610151578063bcea317f14610159578063d90bd6511461016157610088565b8063205548a41461008d5780632dd07fbc146100bd5780633c5f7d46146100e15780634fb3ccc51461010f575b600080fd5b6100bb600480360360408110156100a357600080fd5b506001600160a01b0381351690602001351515610187565b005b6100c56101fb565b604080516001600160a01b039092168252519081900360200190f35b6100bb600480360360408110156100f757600080fd5b506001600160a01b038135169060200135151561020a565b6100c5610218565b61013d6004803603602081101561012d57600080fd5b50356001600160a01b0316610227565b604080519115158252519081900360200190f35b6100c561022d565b6100c561023c565b61013d6004803603602081101561017757600080fd5b50356001600160a01b031661024b565b6001546001600160a01b031633146101d05760405162461bcd60e51b815260040180806020018281038252602681526020018061025d6026913960400191505060405180910390fd5b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6001546001600160a01b031690565b6102148282610187565b5050565b6002546001600160a01b031681565b50600190565b6001546001600160a01b031681565b6002546001600160a01b031690565b600061025682610227565b9291505056fe4f6e6c7920746865206f70657261746f722063616e2063616c6c2074686973206d6574686f64a264697066735822122028f75e16358c346eb903ac939a9c00e86c46612c54d1dc073719dcad326fcfcb64736f6c63430006050033"
    |> Base16.decode()
  end
end
